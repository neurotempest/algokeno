#pragma version 6
txn ApplicationID
int 0
==
bnz main_l19
txn OnCompletion
int DeleteApplication
==
bnz main_l18
txn OnCompletion
int UpdateApplication
==
bnz main_l17
txn OnCompletion
int OptIn
==
bnz main_l16
txn OnCompletion
int CloseOut
==
bnz main_l15
txn OnCompletion
int NoOp
==
bnz main_l7
err
main_l7:
txna ApplicationArgs 0
byte "Commit"
==
bnz main_l14
txna ApplicationArgs 0
byte "SetDraw"
==
bnz main_l13
txna ApplicationArgs 0
byte "Claim"
==
bnz main_l11
err
main_l11:
callsub claim_5
main_l12:
int 0
return
main_l13:
callsub setdraw_4
b main_l12
main_l14:
callsub commit_2
b main_l12
main_l15:
int 0
return
main_l16:
callsub optin_1
int 1
return
main_l17:
int 0
return
main_l18:
int 0
return
main_l19:
callsub init_0
int 1
return

// init
init_0:
byte "numTickets"
int 0
app_global_put
byte "draw"
byte base64()
app_global_put
byte "1s"
int 0
app_global_put
byte "2s"
int 0
app_global_put
byte "3s"
int 0
app_global_put
byte "4s"
int 0
app_global_put
byte "5s"
int 0
app_global_put
byte "6s"
int 0
app_global_put
byte "1p"
int 0
app_global_put
byte "2p"
int 0
app_global_put
byte "3p"
int 0
app_global_put
byte "4p"
int 0
app_global_put
byte "5p"
int 0
app_global_put
byte "6p"
int 0
app_global_put
int 1
return

// opt_in
optin_1:
int 0
byte "wager"
int 0
app_local_put
int 0
byte "commitment"
byte base64()
app_local_put
int 1
return

// commit
commit_2:
global GroupSize
int 2
==
txn GroupIndex
int 0
==
&&
gtxn 0 RekeyTo
global ZeroAddress
==
&&
gtxn 1 RekeyTo
global ZeroAddress
==
&&
gtxn 1 TypeEnum
int pay
==
&&
gtxn 1 Receiver
global CurrentApplicationAddress
==
&&
gtxn 1 CloseRemainderTo
global ZeroAddress
==
&&
txn NumAppArgs
int 2
==
&&
assert
txn Sender
byte "wager"
gtxn 1 Amount
app_local_put
txn Sender
byte "commitment"
txna ApplicationArgs 1
app_local_put
byte "numTickets"
byte "numTickets"
app_global_get
int 1
+
app_global_put
int 1
return

// rollover_amount
rolloveramount_3:
int 0
store 6
txna ApplicationArgs 2
btoi
int 0
==
bnz rolloveramount_3_l11
rolloveramount_3_l1:
txna ApplicationArgs 4
btoi
int 0
==
bnz rolloveramount_3_l10
rolloveramount_3_l2:
txna ApplicationArgs 6
btoi
int 0
==
bnz rolloveramount_3_l9
rolloveramount_3_l3:
txna ApplicationArgs 8
btoi
int 0
==
bnz rolloveramount_3_l8
rolloveramount_3_l4:
txna ApplicationArgs 10
btoi
int 0
==
bnz rolloveramount_3_l7
rolloveramount_3_l5:
txna ApplicationArgs 12
btoi
int 0
==
bz rolloveramount_3_l12
load 6
txna ApplicationArgs 13
btoi
+
store 6
b rolloveramount_3_l12
rolloveramount_3_l7:
load 6
txna ApplicationArgs 11
btoi
+
store 6
b rolloveramount_3_l5
rolloveramount_3_l8:
load 6
txna ApplicationArgs 9
btoi
+
store 6
b rolloveramount_3_l4
rolloveramount_3_l9:
load 6
txna ApplicationArgs 7
btoi
+
store 6
b rolloveramount_3_l3
rolloveramount_3_l10:
load 6
txna ApplicationArgs 5
btoi
+
store 6
b rolloveramount_3_l2
rolloveramount_3_l11:
load 6
txna ApplicationArgs 3
btoi
+
store 6
b rolloveramount_3_l1
rolloveramount_3_l12:
load 6
retsub

// set_draw
setdraw_4:
int 1
app_params_get AppAddress
store 3
store 2
txn Sender
global CreatorAddress
==
global GroupSize
int 1
==
&&
txn GroupIndex
int 0
==
&&
gtxn 0 RekeyTo
global ZeroAddress
==
&&
txn NumAppArgs
int 14
==
&&
txn Fee
global MinTxnFee
int 3
*
>=
&&
txn NumApplications
int 1
==
&&
txna Applications 1
txn ApplicationID
!=
&&
int 1
txnas Accounts
load 2
==
&&
assert
byte "draw"
txna ApplicationArgs 1
app_global_put
byte "1s"
txna ApplicationArgs 2
btoi
app_global_put
byte "1p"
txna ApplicationArgs 3
btoi
app_global_put
byte "2s"
txna ApplicationArgs 4
btoi
app_global_put
byte "2p"
txna ApplicationArgs 5
btoi
app_global_put
byte "3s"
txna ApplicationArgs 6
btoi
app_global_put
byte "3p"
txna ApplicationArgs 7
btoi
app_global_put
byte "4s"
txna ApplicationArgs 8
btoi
app_global_put
byte "4p"
txna ApplicationArgs 9
btoi
app_global_put
byte "5s"
txna ApplicationArgs 10
btoi
app_global_put
byte "5p"
txna ApplicationArgs 11
btoi
app_global_put
byte "6s"
txna ApplicationArgs 12
btoi
app_global_put
byte "6p"
txna ApplicationArgs 13
btoi
app_global_put
global CurrentApplicationAddress
acct_params_get AcctBalance
store 1
store 0
load 0
int 10
/
store 4
callsub rolloveramount_3
store 5
itxn_begin
int pay
itxn_field TypeEnum
global CreatorAddress
itxn_field Receiver
load 4
itxn_field Amount
int 0
itxn_field Fee
load 5
int 100000
>
bz setdraw_4_l2
itxn_next
int pay
itxn_field TypeEnum
int 1
txnas Accounts
itxn_field Receiver
load 5
itxn_field Amount
int 0
itxn_field Fee
setdraw_4_l2:
itxn_submit
int 1
return

// claim
claim_5:
global GroupSize
int 1
==
txn GroupIndex
int 0
==
&&
gtxn 0 RekeyTo
global ZeroAddress
==
&&
txn Fee
global MinTxnFee
int 2
*
>=
&&
int 0
byte "wager"
app_local_get
int 1000000
>=
&&
int 0
byte "commitment"
app_local_get
byte ""
!=
&&
int 0
byte "commitment"
app_local_get
byte "draw"
app_global_get
==
&&
assert
itxn_begin
int pay
itxn_field TypeEnum
int 0
txnas Accounts
itxn_field Receiver
byte "6p"
app_global_get
itxn_field Amount
int 0
itxn_field Fee
itxn_submit
int 1
return